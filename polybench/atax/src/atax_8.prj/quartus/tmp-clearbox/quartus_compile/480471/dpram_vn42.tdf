--altdpram ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" CBX_SINGLE_OUTPUT_FILE="OFF" DEVICE_FAMILY="Cyclone 10 GX" INDATA_ACLR="OFF" INDATA_REG="INCLOCK" INTENDED_DEVICE_FAMILY="Stratix 10" OUTDATA_ACLR="OFF" OUTDATA_REG="OUTCLOCK" OUTDATA_SCLR="OFF" RAM_BLOCK_TYPE="MLAB" RDADDRESS_ACLR="OFF" RDADDRESS_REG="UNREGISTERED" RDCONTROL_ACLR="OFF" RDCONTROL_REG="UNREGISTERED" READ_DURING_WRITE_MODE_MIXED_PORTS="DONT_CARE" WIDTH=1 WIDTH_BYTEENA=1 WIDTHAD=4 WRADDRESS_ACLR="OFF" WRADDRESS_REG="INCLOCK" WRCONTROL_ACLR="OFF" WRCONTROL_REG="INCLOCK" data inclock outclock outclocken q rdaddress wraddress wren CARRY_CHAIN="MANUAL" CYCLONEII_M4K_COMPATIBILITY="ON" LOW_POWER_MODE="AUTO"
--VERSION_BEGIN 20.4 cbx_altdpram 2020:12:14:17:07:51:SC cbx_altera_syncram 2020:12:14:17:07:51:SC cbx_altera_syncram_nd_impl 2020:12:14:17:07:51:SC cbx_altsyncram 2020:12:14:17:07:51:SC cbx_lpm_add_sub 2020:12:14:17:07:51:SC cbx_lpm_compare 2020:12:14:17:07:51:SC cbx_lpm_decode 2020:12:14:17:07:51:SC cbx_lpm_mux 2020:12:14:17:07:51:SC cbx_mgl 2020:12:14:17:23:21:SC cbx_nadder 2020:12:14:17:07:51:SC cbx_stratix 2020:12:14:17:07:51:SC cbx_stratixii 2020:12:14:17:07:51:SC cbx_stratixiii 2020:12:14:17:07:51:SC cbx_stratixv 2020:12:14:17:07:51:SC cbx_util_mgl 2020:12:14:17:07:51:SC  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION cyclone10gx_mlab_cell (clk0, clk1, clr, ena0, ena1, ena2, portaaddr[address_width-1..0], portabyteenamasks[byte_enable_mask_width-1..0], portadatain[data_width-1..0], portbaddr[address_width-1..0])
WITH ( address_width = 1, byte_enable_mask_width = 2, data_width = 1, first_address, first_bit_number, init_file, last_address, logical_ram_depth, logical_ram_name, logical_ram_width, mem_init0, mixed_port_feed_through_mode, port_b_data_out_clear, port_b_data_out_clock)
RETURNS ( portbdataout[data_width-1..0]);

--synthesis_resources = MLAB 1 reg 1 
SUBDESIGN dpram_vn42
( 
	data[0..0]	:	input;
	inclock	:	input;
	outclock	:	input;
	outclocken	:	input;
	q[0..0]	:	output;
	rdaddress[3..0]	:	input;
	wraddress[3..0]	:	input;
	wren	:	input;
) 
VARIABLE 
	lutrama0 : cyclone10gx_mlab_cell
		WITH (
			address_width = 4,
			data_width = 1,
			first_address = 0,
			first_bit_number = 0,
			last_address = 15,
			logical_ram_depth = 16,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 1,
			mixed_port_feed_through_mode = "dont care"
		);
	dataout_reg[0..0] : dffe;
	datain_wire[0..0]	: WIRE;
	dataout_wire[0..0]	: WIRE;
	rdaddr_wire[3..0]	: WIRE;
	wr_en	: WIRE;
	wraddr_wire[3..0]	: WIRE;

BEGIN 
	lutrama[0..0].clk0 = inclock;
	lutrama[0..0].ena0 = wr_en;
	lutrama[0].portaaddr[3..0] = wraddr_wire[3..0];
	lutrama[0].portadatain[0..0] = datain_wire[0..0];
	lutrama[0].portbaddr[3..0] = rdaddr_wire[3..0];
	dataout_reg[].clk = outclock;
	dataout_reg[].d = dataout_wire[];
	dataout_reg[].ena = outclocken;
	datain_wire[] = data[];
	dataout_wire[] = lutrama[0..0].portbdataout[];
	q[] = dataout_reg[].q;
	rdaddr_wire[] = rdaddress[];
	wr_en = wren;
	wraddr_wire[] = wraddress[];
END;
--VALID FILE
